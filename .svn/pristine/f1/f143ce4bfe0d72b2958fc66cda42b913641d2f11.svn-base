package com.ut.scf.web.controller.project;

import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.activiti.engine.ProcessEngine;
import org.activiti.engine.impl.util.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ut.scf.core.dict.PageInfoBean;
import com.ut.scf.core.dict.ScfConsts;
import com.ut.scf.core.util.BeanUtil;
import com.ut.scf.pojo.auto.RepaymentInfo;
import com.ut.scf.reqbean.project.RepayInfoAgreeReq;
import com.ut.scf.reqbean.project.RepayInfoListReqBean;
import com.ut.scf.reqbean.project.RepayInfoReApplyReqBean;
import com.ut.scf.reqbean.project.RepayProcessReqBean;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.service.project.IAgencyService;
import com.ut.scf.service.project.IRepayManagerService;
import com.ut.scf.web.controller.BaseJsonController;
import com.ut.scf.web.controller.pub.CustManagerController;

@Controller
@RequestMapping("/repayInfo")
public class RepayManagerController extends BaseJsonController{
	private static final Logger log = LoggerFactory.getLogger(CustManagerController.class);
	@Resource
	private IRepayManagerService repayManagerService;
	@Resource
	private IAgencyService agencyService;
	@Resource ProcessEngine processEngine;
	
	@RequestMapping(value = "/list", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean getRepayInfoList(@RequestBody RepayInfoListReqBean reqBean, BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		PageInfoBean page = new PageInfoBean();
		page.setPageNumber(reqBean.getPageNumber());
		page.setPageSize(reqBean.getPageSize());
		Map<String, Object> paramMap = BeanUtil.beanToMap(reqBean);
		respBean = repayManagerService.getRepayList(paramMap, page);
		log.debug("getRepayList: {}", respBean);
		
		return respBean;
	}
	
	@RequestMapping(value = "/add", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean addRepayInfo(HttpSession httpSession,
			@RequestBody RepaymentInfo repaymentInfo,BindingResult bindingResult) {
			BaseRespBean respBean = new BaseRespBean();
			respBean = repayManagerService.addRepayInfo(repaymentInfo);
			return respBean;
	}
	
	@RequestMapping(value = "/mod", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean updateCustInfo(HttpSession httpSession,
			@RequestBody RepaymentInfo repaymentInfo,BindingResult bindingResult) {
			BaseRespBean respBean = new BaseRespBean();
			respBean = repayManagerService.updateRepayInfo(repaymentInfo);
			return respBean;
	}
	
//	流程发起
	@RequestMapping(value = "/startProcess", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public BaseRespBean startProcess(HttpSession httpSession,
			@RequestBody RepayProcessReqBean repayProcessReqBean,BindingResult bindingResult){
		BaseRespBean respBean = new BaseRespBean();
//		获取当前用户
		String userName = (String) httpSession
				.getAttribute(ScfConsts.SESSION_USERNAME);
		repayProcessReqBean.setUserId(userName);
		repayProcessReqBean.setActivitiKey("repay");
		JSONObject repayInfoStr = new JSONObject(repayProcessReqBean);
		agencyService.startProcess(repayInfoStr);
		return respBean;
	}
	
//	审核是否同意
	@RequestMapping(value = "/doAgree", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean doAgree(HttpSession httpSession,
			@RequestBody RepayInfoAgreeReq reqBean,
			BindingResult bindingResult) {
			BaseRespBean respBean = new BaseRespBean();
//			获取当前用户
			String userName = (String) httpSession
					.getAttribute(ScfConsts.SESSION_USERNAME);
			reqBean.setUserId(userName);
			JSONObject jsonObject = new JSONObject(reqBean);
			respBean = agencyService.doAgree(jsonObject);
			return respBean;
	}
	
//流程再申请
	@RequestMapping(value = "/reApply", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean reApply(HttpSession httpSession,
			@RequestBody RepayInfoReApplyReqBean reqBean,
			BindingResult bindingResult) {
			BaseRespBean respBean = new BaseRespBean();
//			获取当前用户
			String userName = (String) httpSession
					.getAttribute(ScfConsts.SESSION_USERNAME);
			reqBean.setUserId(userName);
			JSONObject jsonObject = new JSONObject(reqBean);
			respBean = agencyService.reApply(jsonObject);
			return respBean;
	}
}
