package com.scf.service.test.pub;

import java.util.List;
import java.util.Map;

import org.activiti.engine.ProcessEngine;
import org.activiti.engine.repository.Deployment;
import org.activiti.engine.runtime.ProcessInstance;
import org.activiti.engine.task.Task;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.ut.scf.core.dict.PageInfoBean;
import com.ut.scf.core.util.BeanUtil;
import com.ut.scf.pojo.auto.CorpInfo;
import com.ut.scf.reqbean.pub.CustListReqBean;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.service.pub.ICustManagerService;


@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {
        "classpath:spring-mybatis-test.xml" })
public class custService {
	  /**获得流程引擎*/  
	@Autowired
    ProcessEngine processEngine;
	@Autowired ICustManagerService custManagerService;
	private static final Logger log = LoggerFactory.getLogger(custService.class);
	@Test
	public void test() {
		   Deployment deployment = processEngine.getRepositoryService()//获取流程定义和部署相关的Service  
	                .createDeployment()//创建部署对象  
	                .addClasspathResource("custManager.bpmn")  
	                .deploy();//完成部署  
	        System.out.println("部署ID：" + deployment.getId());//部署ID:1  
	        System.out.println("部署时间：" + deployment.getDeploymentTime());//部署时间  
	        
	}
	/**启动流程实例,test中无法获取上下文*/  
	@Test  
	public void startProcessInstance(){  
	      
		String processDefinitionKey = "custManager";//流程定义的key,也就是bpmn中存在的ID  
	    ProcessInstance pi = processEngine.getRuntimeService()//管理流程实例和执行对象，也就是表示正在执行的操作  
	            .startProcessInstanceByKey(processDefinitionKey);
	              
	    System.out.println("流程实例ID：" + pi.getId());//流程实例ID：101  
	    System.out.println("流程实例ID：" + pi.getProcessInstanceId());//流程实例ID：101  
	    System.out.println("流程实例ID:" + pi.getProcessDefinitionId());//myMyHelloWorld:1:4  
	} 
	
	/**查看当前任务办理人的个人任务*/  
	@Test  
	public void findPersonnelTaskList(){  
	    String assignee = "jiangl";//当前任务办理人  
	    List<Task> tasks = processEngine.getTaskService()//与任务相关的Service  
	            .createTaskQuery()//创建一个任务查询对象  
	            .taskAssignee(assignee)  
	            .list();  
	    if(tasks !=null && tasks.size()>0){  
	        for(Task task:tasks){  
	            System.out.println("任务ID:"+task.getId());  
	            System.out.println("任务的办理人:"+task.getAssignee());  
	            System.out.println("任务名称:"+task.getName());  
	            System.out.println("任务的创建时间:"+task.getCreateTime());  
	            System.out.println("任务ID:"+task.getId());  
	            System.out.println("流程实例ID:"+task.getProcessInstanceId());  
	            System.out.println("#####################################");  
	        }  
	    }  
	}
	
	/**
	 * 获取所有符合条件的企业信息
	 */
	@Test
	public void getCustInfoList(){
		CustListReqBean reqBean = new CustListReqBean();
		reqBean.setCorpType("私营企业");
		reqBean.setSysType((byte)6);
		Map<String,Object> paramMap = BeanUtil.beanToMap(reqBean);
		PageInfoBean page = new PageInfoBean();
		page.setPageNumber(reqBean.getPageNumber());
		page.setPageSize(reqBean.getPageSize());
		BaseRespBean list = custManagerService.getcorpList(paramMap, page);
		log.info("deleteCorp : " +	list );
	}
	
	@Test
	public void addCustInfo(){
		CorpInfo corpinfo = new CorpInfo();
		corpinfo.setAgencyNum("343434");
		corpinfo.setCorpType("上市企业");
		corpinfo.setCorpName("不空");
		custManagerService.addCorp(corpinfo);
	}
	
	@Test
	public void updateCustInfo(){
		CorpInfo corpinfo = new CorpInfo();
		corpinfo.setCorpId("2c9984ba5c1feeec68521feeec950000");
		corpinfo.setCorpName("不bu空");
		custManagerService.updateCorp(corpinfo);
	}
} 
