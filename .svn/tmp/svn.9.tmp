package com.ut.scf.service.project.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.activiti.engine.ProcessEngine;
import org.activiti.engine.RepositoryService;
import org.activiti.engine.RuntimeService;
import org.activiti.engine.TaskService;
import org.activiti.engine.history.HistoricTaskInstance;
import org.activiti.engine.history.HistoricVariableInstance;
import org.activiti.engine.impl.util.json.JSONObject;
import org.springframework.stereotype.Service;

import com.ut.scf.core.dict.PageInfoBean;
import com.ut.scf.dao.project.IActivitiDao;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.respbean.ListRespBean;
import com.ut.scf.respbean.PageRespBean;
import com.ut.scf.respbean.StringRespBean;
import com.ut.scf.service.project.IActivitiService;

@Service("activitiService")
public class ActivitiServiceImpl implements IActivitiService {
	@Resource ProcessEngine processEngine;
	@Resource RuntimeService runtimeService;
	@Resource TaskService taskService;
	@Resource RepositoryService repositoryService;
	@Resource IActivitiDao activitiDao;
	/**
	 * 查找代办
	 */
	@Override
	public BaseRespBean getAgencyTaskList(Map<String, Object> map,
			PageInfoBean page) {
//		2.查出所有的任务
		  /*List<Task> tasks = processEngine.getTaskService()//与任务相关的Service  
		            .createTaskQuery()//创建一个任务查询对象  
		            .taskCandidateUser(userName) 
		            .list();
		List<Map<String, String>> list = new ArrayList<Map<String,String>>();
		for (Task task : tasks) {
			Map<String, String> taskMap = new HashMap<String, String>();
			taskMap.put("taskId", task.getId());
			taskMap.put("processDefinitionId", task.getProcessDefinitionId());
			taskMap.put("processInstanceId", task.getProcessInstanceId());
			taskMap.put("taskName", task.getName());
			taskMap.put("assignee", task.getAssignee());
			taskMap.put("processDefinitionName", repositoryService.getProcessDefinition(task.getProcessDefinitionId()).getName());
			list.add(taskMap);
		}*/
		List<Map<String, Object>> list = activitiDao.selectAgencyTask(map, page);
	  	PageRespBean respBean = new PageRespBean();
		respBean.setPages(page.getTotalPage());
		respBean.setRecords(page.getTotalRecord());
		respBean.setDataList(list);
		return respBean;  
	}

	@Override
	public BaseRespBean getDataByTaskId(String taskId) {
		// TODO Auto-generated method stub
//		根据taskId获取流程数据
		String processInstanceId = taskService.createTaskQuery().taskId(taskId).singleResult().getProcessInstanceId();
//		根据流程id查询出所有的taskId,获取倒数到第二个
//		List<Task> list = taskService.createTaskQuery().processInstanceId(processInstanceId).list();
		List<HistoricTaskInstance> list = processEngine.getHistoryService()  
	            .createHistoricTaskInstanceQuery()  
	            .processInstanceId(processInstanceId)  
	            .list();  
		StringRespBean respBean = new StringRespBean();
		if(list.size()>1){
			Object value = processEngine.getHistoryService().createHistoricVariableInstanceQuery().variableName("agencyJson").taskId(list.get(list.size()-2).getId()).list().get(0).getValue();
			respBean.setStr(value.toString());
		}
		return respBean;
	}



	@Override
	public BaseRespBean getAllHistoryVariable(Map<String, Object> map) {
		// TODO Auto-generated method stub
//		1.获取流程Id
		String procInstId = (String) map.get("procInstId");
		ListRespBean respBean = new ListRespBean();
		List<HistoricVariableInstance> historyList = processEngine.getHistoryService().createHistoricVariableInstanceQuery().processInstanceId(procInstId).list();
		List<Map<String, Object>> list = new ArrayList<Map<String,Object>>();
		for (HistoricVariableInstance historicVariableInstance : historyList) {
			Map<String, Object> historyMap = new HashMap<String, Object>();
			if(historicVariableInstance.getVariableName().equals("agencyJson")){
				Object value = historicVariableInstance.getValue();
				JSONObject jsonObject = new JSONObject(value.toString());
				if(jsonObject.has("advice")){
					String taskId = historicVariableInstance.getTaskId();
					HistoricTaskInstance task = processEngine.getHistoryService().createHistoricTaskInstanceQuery().taskId(taskId).list().get(0);
					historyMap.put("taskName", task.getName());
					historyMap.put("assignee", task.getAssignee());
					historyMap.put("createTime", historicVariableInstance.getCreateTime());
					historyMap.put("advice", jsonObject.get("advice"));
					historyMap.put("taskId", taskId);
					historyMap.put("hisId", historicVariableInstance.getId());
					list.add(historyMap);
				}
			}
		}
		respBean.setDataList(list);
		return respBean;
	}

	@Override
	public BaseRespBean getAgencyTaskNum(Map<String, Object> map) {
		// TODO Auto-generated method stub
		int agencyTaskNum = activitiDao.countAgencyTask(map);
		ListRespBean respBean = new ListRespBean();
		List<Map<String, Object>> list = new ArrayList<Map<String,Object>>();
		Map<String, Object> numlist = new HashMap<String, Object>();
		numlist.put("AgencyTaskNum", agencyTaskNum);
		list.add(numlist);
		respBean.setDataList(list);
		return respBean;
	}
	
}

